0private int services.classes.FakeGetters.value
it contains me
primitive: value
FakeGetters
[]
FakeGetters
6[public int services.classes.FakeGetters.getValue()]
317
/<FakeGetters><value>317</value></FakeGetters>
<private java.lang.String services.classes.Strings.property
it contains me
primitive: property
	Strings
[]
	Strings
B[public java.lang.String services.classes.Strings.getProperty()]
null
8private java.lang.String services.classes.Strings.name
it contains me
primitive: name
	Strings
[]
	Strings
>[public java.lang.String services.classes.Strings.getName()]
< > & ' "
?<Strings><name>&lt; &gt; &amp; &apos; &quot;</name></Strings>
6private java.lang.Object services.classes.Generics.t

Generics
[]

Generics
<[public java.lang.Object services.classes.Generics.getT()]
6private java.lang.Object services.classes.Generics.t

Generics
[]

Generics
<[public java.lang.Object services.classes.Generics.getT()]
6private java.lang.Object services.classes.Generics.t

Generics
[]

Generics
<[public java.lang.Object services.classes.Generics.getT()]
+private final int java.lang.Integer.value
it contains me
primitive: value
	Integer
[]
	Integer
[]
	Integer
®[public static java.lang.Integer java.lang.Integer.valueOf(java.lang.String,int) throws java.lang.NumberFormatException, public static java.lang.Integer java.lang.Integer.valueOf(java.lang.String) throws java.lang.NumberFormatException, public static java.lang.Integer java.lang.Integer.valueOf(int)]
null

<Generics><t></t></Generics>
:<Generics><t><Generics><t></t></Generics></t></Generics>
V<Generics><t><Generics><t><Generics><t></t></Generics></t></Generics></t></Generics>
@private java.lang.Integer[] services.classes.ObjectArrays.ints
ObjectArrays
[]
ObjectArrays
F[public java.lang.Integer[] services.classes.ObjectArrays.getInts()]
+private final int java.lang.Integer.value
it contains me
primitive: value
	Integer
[]
	Integer
[]
	Integer
®[public static java.lang.Integer java.lang.Integer.valueOf(java.lang.String,int) throws java.lang.NumberFormatException, public static java.lang.Integer java.lang.Integer.valueOf(java.lang.String) throws java.lang.NumberFormatException, public static java.lang.Integer java.lang.Integer.valueOf(int)]
null

+private final int java.lang.Integer.value
it contains me
primitive: value
	Integer
[]
	Integer
[]
	Integer
®[public static java.lang.Integer java.lang.Integer.valueOf(java.lang.String,int) throws java.lang.NumberFormatException, public static java.lang.Integer java.lang.Integer.valueOf(java.lang.String) throws java.lang.NumberFormatException, public static java.lang.Integer java.lang.Integer.valueOf(int)]
null

Bprivate java.lang.String[] services.classes.ObjectArrays.strings
ObjectArrays
[]
ObjectArrays
H[public java.lang.String[] services.classes.ObjectArrays.getStrings()]
-private final byte[] java.lang.String.value
String
[]
String
[]
String
Ö[public static java.lang.String java.lang.String.valueOf(int), public static java.lang.String java.lang.String.valueOf(boolean), public static java.lang.String java.lang.String.valueOf(char[],int,int), public static java.lang.String java.lang.String.valueOf(char[]), public static java.lang.String java.lang.String.valueOf(char), public static java.lang.String java.lang.String.valueOf(java.lang.Object), public static java.lang.String java.lang.String.valueOf(float), public static java.lang.String java.lang.String.valueOf(long), public static java.lang.String java.lang.String.valueOf(double)]
+private final byte java.lang.String.coder
it contains me
primitive: coder
String
[]
String
[]
String
[]
null
#private int java.lang.String.hash
it contains me
primitive: hash
String
[]
String
[]
String
*[public int java.lang.String.hashCode()]
null
-private boolean java.lang.String.hashIsZero
it contains me
primitive: hashIsZero
String
[]
String
[]
String
[]
null

Dprivate java.lang.Boolean[] services.classes.ObjectArrays.booleans
ObjectArrays
[]
ObjectArrays
J[public java.lang.Boolean[] services.classes.ObjectArrays.getBooleans()]
T<ObjectArrays><ints></ints><strings></strings><booleans></booleans></ObjectArrays>
:private java.util.List services.classes.Collections.list
Collections
[]
Collections
@[public java.util.List services.classes.Collections.getList()]
-private final byte[] java.lang.String.value
String
[]
String
[]
String
Ö[public static java.lang.String java.lang.String.valueOf(int), public static java.lang.String java.lang.String.valueOf(boolean), public static java.lang.String java.lang.String.valueOf(char[],int,int), public static java.lang.String java.lang.String.valueOf(char[]), public static java.lang.String java.lang.String.valueOf(char), public static java.lang.String java.lang.String.valueOf(java.lang.Object), public static java.lang.String java.lang.String.valueOf(float), public static java.lang.String java.lang.String.valueOf(long), public static java.lang.String java.lang.String.valueOf(double)]
+private final byte java.lang.String.coder
it contains me
primitive: coder
String
[]
String
[]
String
[]
null
#private int java.lang.String.hash
it contains me
primitive: hash
String
[]
String
[]
String
*[public int java.lang.String.hashCode()]
null
-private boolean java.lang.String.hashIsZero
it contains me
primitive: hashIsZero
String
[]
String
[]
String
[]
null

-private final byte[] java.lang.String.value
String
[]
String
[]
String
Ö[public static java.lang.String java.lang.String.valueOf(int), public static java.lang.String java.lang.String.valueOf(boolean), public static java.lang.String java.lang.String.valueOf(char[],int,int), public static java.lang.String java.lang.String.valueOf(char[]), public static java.lang.String java.lang.String.valueOf(char), public static java.lang.String java.lang.String.valueOf(java.lang.Object), public static java.lang.String java.lang.String.valueOf(float), public static java.lang.String java.lang.String.valueOf(long), public static java.lang.String java.lang.String.valueOf(double)]
+private final byte java.lang.String.coder
it contains me
primitive: coder
String
[]
String
[]
String
[]
null
#private int java.lang.String.hash
it contains me
primitive: hash
String
[]
String
[]
String
*[public int java.lang.String.hashCode()]
null
-private boolean java.lang.String.hashIsZero
it contains me
primitive: hashIsZero
String
[]
String
[]
String
[]
null

8private java.util.Set services.classes.Collections.set
Collections
[]
Collections
>[public java.util.Set services.classes.Collections.getSet()]
8private java.util.Map services.classes.Collections.map
Collections
[]
Collections
>[public java.util.Map services.classes.Collections.getMap()]
+private final int java.lang.Integer.value
it contains me
primitive: value
	Integer
[]
	Integer
[]
	Integer
®[public static java.lang.Integer java.lang.Integer.valueOf(java.lang.String,int) throws java.lang.NumberFormatException, public static java.lang.Integer java.lang.Integer.valueOf(java.lang.String) throws java.lang.NumberFormatException, public static java.lang.Integer java.lang.Integer.valueOf(int)]
null

<private java.lang.String services.classes.Strings.property
it contains me
primitive: property
	Strings
[]
	Strings
B[public java.lang.String services.classes.Strings.getProperty()]
one
8private java.lang.String services.classes.Strings.name
it contains me
primitive: name
	Strings
[]
	Strings
>[public java.lang.String services.classes.Strings.getName()]
_
;<Strings><property>one</property><name>_</name></Strings>
+private final int java.lang.Integer.value
it contains me
primitive: value
	Integer
[]
	Integer
[]
	Integer
®[public static java.lang.Integer java.lang.Integer.valueOf(java.lang.String,int) throws java.lang.NumberFormatException, public static java.lang.Integer java.lang.Integer.valueOf(java.lang.String) throws java.lang.NumberFormatException, public static java.lang.Integer java.lang.Integer.valueOf(int)]
null

<private java.lang.String services.classes.Strings.property
it contains me
primitive: property
	Strings
[]
	Strings
B[public java.lang.String services.classes.Strings.getProperty()]
two
8private java.lang.String services.classes.Strings.name
it contains me
primitive: name
	Strings
[]
	Strings
>[public java.lang.String services.classes.Strings.getName()]
_
;<Strings><property>two</property><name>_</name></Strings>
Î<Collections><map><key></key><value><Strings><property>one</property><name>_</name></Strings></value><key></key><value><Strings><property>two</property><name>_</name></Strings></value></map></Collections>
<private java.lang.String services.classes.Strings.property
it contains me
primitive: property
	Strings
[]
	Strings
B[public java.lang.String services.classes.Strings.getProperty()]
value
8private java.lang.String services.classes.Strings.name
it contains me
primitive: name
	Strings
[]
	Strings
>[public java.lang.String services.classes.Strings.getName()]
tim
?<Strings><property>value</property><name>tim</name></Strings>
<private java.lang.String services.classes.Strings.property
it contains me
primitive: property
	Strings
[]
	Strings
B[public java.lang.String services.classes.Strings.getProperty()]
null
8private java.lang.String services.classes.Strings.name
it contains me
primitive: name
	Strings
[]
	Strings
>[public java.lang.String services.classes.Strings.getName()]
null
.<Strings><property>null</property></Strings>
	@private services.classes.Part services.classes.Composite.part1
	Composite
	[]
	Composite
	F[public services.classes.Part services.classes.Composite.getPart1()]
	(private int services.classes.Part.size
	it contains me
	primitive: size
	Part
	[]
	Part
	.[public int services.classes.Part.getSize()]
	1
	<Part><size>1</size></Part>
	@private services.classes.Part services.classes.Composite.part2
	Composite
	[]
	Composite
	F[public services.classes.Part services.classes.Composite.getPart2()]
	(private int services.classes.Part.size
	it contains me
	primitive: size
	Part
	[]
	Part
	.[public int services.classes.Part.getSize()]
	2
	<Part><size>2</size></Part>
	m<Composite><part1><Part><size>1</size></Part></part1><part2><Part><size>2</size></Part></part2></Composite>

@private java.lang.Integer services.classes.Wrappers.wrappedInt

it contains me

primitive: wrappedInt


Wrappers

[]


Wrappers

F[public java.lang.Integer services.classes.Wrappers.getWrappedInt()]

42

Dprivate java.lang.Boolean services.classes.Wrappers.wrappedBoolean

it contains me

primitive: wrappedBoolean


Wrappers

[]


Wrappers

J[public java.lang.Boolean services.classes.Wrappers.getWrappedBoolean()]

null

2<Wrappers><wrappedInt>42</wrappedInt></Wrappers>
<NoFields></NoFields>
>private final char services.classes.PrimitiveFields.someChar
it contains me
primitive: someChar
PrimitiveFields
[]
PrimitiveFields
>[public char services.classes.PrimitiveFields.getSomeChar()]
#
>private final long services.classes.PrimitiveFields.someLong
it contains me
primitive: someLong
PrimitiveFields
[]
PrimitiveFields
>[public long services.classes.PrimitiveFields.getSomeLong()]
42
Dprivate final boolean services.classes.PrimitiveFields.someBoolean
it contains me
primitive: someBoolean
PrimitiveFields
C[public boolean services.classes.PrimitiveFields.isSomeBoolean()]
true
q<PrimitiveFields><someChar>#</someChar><someLong>42</someLong><someBoolean>true</someBoolean></PrimitiveFields>
